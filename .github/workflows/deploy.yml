name: Deploy to EC2 via SSH

on:
  push:
    branches:
      - main

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PAT }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nextjs-app ./aws-test-app

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nextjs-app

  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: docker-build-and-push

    steps:
      - name: Set up SSH
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOYKEY }}
          HOST: ${{ secrets.HOST }}
        run: |
          echo "DEPLOY_KEY length: ${#DEPLOY_KEY}"
          echo "HOST is: '$HOST'"

          if [ -z "$HOST" ]; then
            echo "ERROR: HOST secret is empty or missing!"
            exit 1
          fi

          mkdir -p ~/.ssh
          rm -f ~/.ssh/id_rsa
          printf "%s\n" "$DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          USER: ${{ secrets.USER }}
          HOST: ${{ secrets.HOST }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
          docker pull $DOCKER_USERNAME/nextjs-app:latest
          docker stop next-app || true
          docker rm next-app || true
          docker run -d --name next-app -p 3000:3000 $DOCKER_USERNAME/nextjs-app:latest
          EOF
