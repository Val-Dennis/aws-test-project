name: Deploy to EC2 via SSH

on:
  push:
    branches:
      - main

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PAT }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nextjs-app ./aws-test-app

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nextjs-app

  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: docker-build-and-push

    steps:
      - name: Set up SSH
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOYKEY }}
          HOST: ${{ secrets.HOST }}
        run: |
          echo "DEPLOY_KEY length: ${#DEPLOY_KEY}"
          echo "HOST is: '$HOST'"

          if [ -z "$HOST" ]; then
            echo "ERROR: HOST secret is empty or missing!"
            exit 1
          fi

          mkdir -p ~/.ssh
          rm -f ~/.ssh/id_rsa
          printf "%s\n" "$DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          USER: ${{ secrets.USER }}
          HOST: ${{ secrets.HOST }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
          if ! command -v docker &> /dev/null
          then
            sudo dnf install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
          fi

          sudo docker pull $DOCKER_USERNAME/nextjs-app:latest
          sudo docker stop next-app || true
          sudo docker rm next-app || true
          sudo docker run -d --name next-app -p 3000:3000 $DOCKER_USERNAME/nextjs-app:latest

          if ! command -v nginx &> /dev/null
          then
            sudo dnf install -y nginx
            sudo systemctl enable nginx
          fi

          sudo tee /etc/nginx/conf.d/nextjs-app.conf > /dev/null << 'EOL'
          server {
              listen 80;
              location / {
                  proxy_pass http://localhost:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade \$http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host \$host;
                  proxy_cache_bypass \$http_upgrade;
              }
          }
          EOL

          sudo systemctl restart nginx
          EOF
